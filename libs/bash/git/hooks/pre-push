#!/bin/bash -l

# set -exo pipefail # when debuggin
set -eo pipefail

# Enforce the session load like an interactive user
# shellcheck disable=SC1091
source "$HOME/.bashrc" || exit 1

if [[ $LOG_LEVEL == "TRACE" ]]
then 
    set -x
fi

## Function

function rebaseFromOriginMain() {
    # git fetch origin
    # git rebase origin/main
    # if ! 0
    # printf error, please rebase
    # exit 1
}

## Logic

if [[ ! $WORKSPACE ]]
then
    declare WORKSPACE
    WORKSPACE=$(git rev-parse --show-toplevel)
    export WORKSPACE
    printf "INFO: WORKSPACE %s\n" "${WORKSPACE}"
fi

# TODO WIP Come back to this next time around
#rebaseFromOriginMain # Rebase feature from on origin/main before push to prevent merge-conflict and running complaince tooling on untouched resources

# shellcheck disable=SC1091
source "${WORKSPACE}/.tmp/toolchain-management/libs/bash/git/common.sh"

declare DIFF_LOGIC
DIFF_LOGIC="git diff origin/main --name-only"
printf "INFO: DIFF_LOGIC %s\n" "${DIFF_LOGIC}"

declare DIFF_LIST
DIFF_LIST=$(generateDiffList "${DIFF_LOGIC}")
if [[ ! ${DIFF_LIST} ]]
then
    printf "WARN: IAC DIFF_LIST is empty, exiting without error.\n"
    exit 0
fi
printf "INFO: DIFF_LIST: %s\n" "${DIFF_LIST}"

exec ${DIFF_LIST}

printf "INFO: Git pre-push hook completed successfully.\n"
