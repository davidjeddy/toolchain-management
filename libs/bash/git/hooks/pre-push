#!/bin/bash -l

# set -exo pipefail # when debuggin
set -eo pipefail

# Enforce the session load like an interactive user
# shellcheck disable=SC1091
source "$HOME/.bashrc" || exit 1

if [[ $LOG_LEVEL == "TRACE" ]]
then 
    set -x
fi

## Function

function rebaseFromOriginMain() {
    # Do a preliminary rebase against origin/main to ensure history is up to date from source branch
    git fetch origin --all
    git rebase origin/main
    if [[ $? != "0" ]]
    then
        printf "ERR: Looks like we are not able to cleanly rebase from origin/main. This would cause exessice work and possible merge conflicts.\n"
        printf "ERR: Please pull the current branch from target branch before pushing.\n"
        exit 1
    fi
}

## Logic

if [[ ! $WORKSPACE ]]
then
    declare WORKSPACE
    WORKSPACE=$(git rev-parse --show-toplevel)
    export WORKSPACE
    printf "INFO: WORKSPACE %s\n" "${WORKSPACE}"
fi

# Rebase from origin/main to ensure a smooth pre-push compliance and security scan process

rebaseFromOriginMain

# shellcheck disable=SC1091
source "${WORKSPACE}/.tmp/toolchain-management/libs/bash/git/common.sh"

declare DIFF_LOGIC
DIFF_LOGIC="git diff origin/main --name-only"
printf "INFO: DIFF_LOGIC %s\n" "${DIFF_LOGIC}"

declare DIFF_LIST
DIFF_LIST=$(generateDiffList "${DIFF_LOGIC}")
if [[ ! ${DIFF_LIST} ]]
then
    printf "WARN: IAC DIFF_LIST is empty, exiting without error.\n"
    exit 0
fi
printf "INFO: DIFF_LIST: %s\n" "${DIFF_LIST}"

exec ${DIFF_LIST}

printf "INFO: Git pre-push hook completed successfully.\n"
